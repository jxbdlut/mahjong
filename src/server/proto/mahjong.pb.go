// Code generated by protoc-gen-go.
// source: mahjong.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	mahjong.proto

It has these top-level messages:
	LoginReq
	LoginRsp
	CreateTableReq
	CreateTableRsp
	JoinTableReq
	JoinTableRsp
	OperatReq
	OperatRsp
	DealReq
	DealRsp
	DrawReq
	DrawRsp
	HuReq
	HuRsp
	Eat
	EatReq
	EatRsp
	PongReq
	PongRsp
	UserJoinTableMsg
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type OperatType int32

const (
	OperatType_Unkonw     OperatType = 0
	OperatType_DealOperat OperatType = 1
	OperatType_DrawOperat OperatType = 2
	OperatType_HuOperat   OperatType = 4
	OperatType_EatOperat  OperatType = 8
	OperatType_PongOperat OperatType = 16
)

var OperatType_name = map[int32]string{
	0:  "Unkonw",
	1:  "DealOperat",
	2:  "DrawOperat",
	4:  "HuOperat",
	8:  "EatOperat",
	16: "PongOperat",
}
var OperatType_value = map[string]int32{
	"Unkonw":     0,
	"DealOperat": 1,
	"DrawOperat": 2,
	"HuOperat":   4,
	"EatOperat":  8,
	"PongOperat": 16,
}

func (x OperatType) String() string {
	return proto1.EnumName(OperatType_name, int32(x))
}
func (OperatType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PongReq_GangType int32

const (
	PongReq_MingGang PongReq_GangType = 0
	PongReq_BuGang   PongReq_GangType = 1
	PongReq_AnGang   PongReq_GangType = 2
)

var PongReq_GangType_name = map[int32]string{
	0: "MingGang",
	1: "BuGang",
	2: "AnGang",
}
var PongReq_GangType_value = map[string]int32{
	"MingGang": 0,
	"BuGang":   1,
	"AnGang":   2,
}

func (x PongReq_GangType) String() string {
	return proto1.EnumName(PongReq_GangType_name, int32(x))
}
func (PongReq_GangType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{17, 0} }

type LoginReq struct {
	Uid    uint64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Passwd string `protobuf:"bytes,2,opt,name=passwd" json:"passwd,omitempty"`
	Name   string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (m *LoginReq) Reset()                    { *m = LoginReq{} }
func (m *LoginReq) String() string            { return proto1.CompactTextString(m) }
func (*LoginReq) ProtoMessage()               {}
func (*LoginReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LoginReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *LoginReq) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

func (m *LoginReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type LoginRsp struct {
	ErrCode int32  `protobuf:"varint,1,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=err_msg,json=errMsg" json:"err_msg,omitempty"`
}

func (m *LoginRsp) Reset()                    { *m = LoginRsp{} }
func (m *LoginRsp) String() string            { return proto1.CompactTextString(m) }
func (*LoginRsp) ProtoMessage()               {}
func (*LoginRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LoginRsp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *LoginRsp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type CreateTableReq struct {
	Uid uint64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
}

func (m *CreateTableReq) Reset()                    { *m = CreateTableReq{} }
func (m *CreateTableReq) String() string            { return proto1.CompactTextString(m) }
func (*CreateTableReq) ProtoMessage()               {}
func (*CreateTableReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateTableReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type CreateTableRsp struct {
	ErrCode int32  `protobuf:"varint,1,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=err_msg,json=errMsg" json:"err_msg,omitempty"`
	TableId uint32 `protobuf:"varint,3,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
}

func (m *CreateTableRsp) Reset()                    { *m = CreateTableRsp{} }
func (m *CreateTableRsp) String() string            { return proto1.CompactTextString(m) }
func (*CreateTableRsp) ProtoMessage()               {}
func (*CreateTableRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateTableRsp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *CreateTableRsp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *CreateTableRsp) GetTableId() uint32 {
	if m != nil {
		return m.TableId
	}
	return 0
}

type JoinTableReq struct {
	Uid     uint64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	TableId uint32 `protobuf:"varint,2,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
}

func (m *JoinTableReq) Reset()                    { *m = JoinTableReq{} }
func (m *JoinTableReq) String() string            { return proto1.CompactTextString(m) }
func (*JoinTableReq) ProtoMessage()               {}
func (*JoinTableReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *JoinTableReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *JoinTableReq) GetTableId() uint32 {
	if m != nil {
		return m.TableId
	}
	return 0
}

type JoinTableRsp struct {
	ErrCode int32  `protobuf:"varint,1,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=err_msg,json=errMsg" json:"err_msg,omitempty"`
}

func (m *JoinTableRsp) Reset()                    { *m = JoinTableRsp{} }
func (m *JoinTableRsp) String() string            { return proto1.CompactTextString(m) }
func (*JoinTableRsp) ProtoMessage()               {}
func (*JoinTableRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *JoinTableRsp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *JoinTableRsp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type OperatReq struct {
	Type    OperatType `protobuf:"varint,1,opt,name=type,enum=proto.OperatType" json:"type,omitempty"`
	DealReq *DealReq   `protobuf:"bytes,2,opt,name=dealReq" json:"dealReq,omitempty"`
	DrawReq *DrawReq   `protobuf:"bytes,3,opt,name=drawReq" json:"drawReq,omitempty"`
	HuReq   *HuReq     `protobuf:"bytes,4,opt,name=huReq" json:"huReq,omitempty"`
	EatReq  *EatReq    `protobuf:"bytes,5,opt,name=eatReq" json:"eatReq,omitempty"`
	PongReq *PongReq   `protobuf:"bytes,6,opt,name=pongReq" json:"pongReq,omitempty"`
}

func (m *OperatReq) Reset()                    { *m = OperatReq{} }
func (m *OperatReq) String() string            { return proto1.CompactTextString(m) }
func (*OperatReq) ProtoMessage()               {}
func (*OperatReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *OperatReq) GetType() OperatType {
	if m != nil {
		return m.Type
	}
	return OperatType_Unkonw
}

func (m *OperatReq) GetDealReq() *DealReq {
	if m != nil {
		return m.DealReq
	}
	return nil
}

func (m *OperatReq) GetDrawReq() *DrawReq {
	if m != nil {
		return m.DrawReq
	}
	return nil
}

func (m *OperatReq) GetHuReq() *HuReq {
	if m != nil {
		return m.HuReq
	}
	return nil
}

func (m *OperatReq) GetEatReq() *EatReq {
	if m != nil {
		return m.EatReq
	}
	return nil
}

func (m *OperatReq) GetPongReq() *PongReq {
	if m != nil {
		return m.PongReq
	}
	return nil
}

type OperatRsp struct {
	ErrCode int32      `protobuf:"varint,1,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
	ErrMsg  string     `protobuf:"bytes,2,opt,name=err_msg,json=errMsg" json:"err_msg,omitempty"`
	Type    OperatType `protobuf:"varint,3,opt,name=type,enum=proto.OperatType" json:"type,omitempty"`
	DealRsp *DealRsp   `protobuf:"bytes,4,opt,name=dealRsp" json:"dealRsp,omitempty"`
	DrawRsp *DrawRsp   `protobuf:"bytes,5,opt,name=drawRsp" json:"drawRsp,omitempty"`
	HuRsp   *HuRsp     `protobuf:"bytes,6,opt,name=huRsp" json:"huRsp,omitempty"`
	EatRsp  *EatRsp    `protobuf:"bytes,7,opt,name=eatRsp" json:"eatRsp,omitempty"`
	PongRsp *PongRsp   `protobuf:"bytes,8,opt,name=pongRsp" json:"pongRsp,omitempty"`
}

func (m *OperatRsp) Reset()                    { *m = OperatRsp{} }
func (m *OperatRsp) String() string            { return proto1.CompactTextString(m) }
func (*OperatRsp) ProtoMessage()               {}
func (*OperatRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *OperatRsp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *OperatRsp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *OperatRsp) GetType() OperatType {
	if m != nil {
		return m.Type
	}
	return OperatType_Unkonw
}

func (m *OperatRsp) GetDealRsp() *DealRsp {
	if m != nil {
		return m.DealRsp
	}
	return nil
}

func (m *OperatRsp) GetDrawRsp() *DrawRsp {
	if m != nil {
		return m.DrawRsp
	}
	return nil
}

func (m *OperatRsp) GetHuRsp() *HuRsp {
	if m != nil {
		return m.HuRsp
	}
	return nil
}

func (m *OperatRsp) GetEatRsp() *EatRsp {
	if m != nil {
		return m.EatRsp
	}
	return nil
}

func (m *OperatRsp) GetPongRsp() *PongRsp {
	if m != nil {
		return m.PongRsp
	}
	return nil
}

type DealReq struct {
	Uid     uint64  `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Cards   []int32 `protobuf:"varint,2,rep,packed,name=cards" json:"cards,omitempty"`
	FanCard int32   `protobuf:"varint,3,opt,name=fan_card,json=fanCard" json:"fan_card,omitempty"`
	HunCard int32   `protobuf:"varint,4,opt,name=hun_card,json=hunCard" json:"hun_card,omitempty"`
}

func (m *DealReq) Reset()                    { *m = DealReq{} }
func (m *DealReq) String() string            { return proto1.CompactTextString(m) }
func (*DealReq) ProtoMessage()               {}
func (*DealReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DealReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *DealReq) GetCards() []int32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *DealReq) GetFanCard() int32 {
	if m != nil {
		return m.FanCard
	}
	return 0
}

func (m *DealReq) GetHunCard() int32 {
	if m != nil {
		return m.HunCard
	}
	return 0
}

type DealRsp struct {
}

func (m *DealRsp) Reset()                    { *m = DealRsp{} }
func (m *DealRsp) String() string            { return proto1.CompactTextString(m) }
func (*DealRsp) ProtoMessage()               {}
func (*DealRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type DrawReq struct {
	Card int32 `protobuf:"varint,1,opt,name=card" json:"card,omitempty"`
}

func (m *DrawReq) Reset()                    { *m = DrawReq{} }
func (m *DrawReq) String() string            { return proto1.CompactTextString(m) }
func (*DrawReq) ProtoMessage()               {}
func (*DrawReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *DrawReq) GetCard() int32 {
	if m != nil {
		return m.Card
	}
	return 0
}

type DrawRsp struct {
	Card int32 `protobuf:"varint,1,opt,name=card" json:"card,omitempty"`
}

func (m *DrawRsp) Reset()                    { *m = DrawRsp{} }
func (m *DrawRsp) String() string            { return proto1.CompactTextString(m) }
func (*DrawRsp) ProtoMessage()               {}
func (*DrawRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *DrawRsp) GetCard() int32 {
	if m != nil {
		return m.Card
	}
	return 0
}

type HuReq struct {
	Card int32 `protobuf:"varint,1,opt,name=card" json:"card,omitempty"`
}

func (m *HuReq) Reset()                    { *m = HuReq{} }
func (m *HuReq) String() string            { return proto1.CompactTextString(m) }
func (*HuReq) ProtoMessage()               {}
func (*HuReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *HuReq) GetCard() int32 {
	if m != nil {
		return m.Card
	}
	return 0
}

type HuRsp struct {
	Ok bool `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
}

func (m *HuRsp) Reset()                    { *m = HuRsp{} }
func (m *HuRsp) String() string            { return proto1.CompactTextString(m) }
func (*HuRsp) ProtoMessage()               {}
func (*HuRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *HuRsp) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type Eat struct {
	HandCard []int32 `protobuf:"varint,1,rep,packed,name=hand_card,json=handCard" json:"hand_card,omitempty"`
	WaveCard []int32 `protobuf:"varint,2,rep,packed,name=wave_card,json=waveCard" json:"wave_card,omitempty"`
}

func (m *Eat) Reset()                    { *m = Eat{} }
func (m *Eat) String() string            { return proto1.CompactTextString(m) }
func (*Eat) ProtoMessage()               {}
func (*Eat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *Eat) GetHandCard() []int32 {
	if m != nil {
		return m.HandCard
	}
	return nil
}

func (m *Eat) GetWaveCard() []int32 {
	if m != nil {
		return m.WaveCard
	}
	return nil
}

type EatReq struct {
	Eat []*Eat `protobuf:"bytes,1,rep,name=eat" json:"eat,omitempty"`
}

func (m *EatReq) Reset()                    { *m = EatReq{} }
func (m *EatReq) String() string            { return proto1.CompactTextString(m) }
func (*EatReq) ProtoMessage()               {}
func (*EatReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *EatReq) GetEat() []*Eat {
	if m != nil {
		return m.Eat
	}
	return nil
}

type EatRsp struct {
	Eat     *Eat  `protobuf:"bytes,1,opt,name=eat" json:"eat,omitempty"`
	DisCard int32 `protobuf:"varint,2,opt,name=dis_card,json=disCard" json:"dis_card,omitempty"`
}

func (m *EatRsp) Reset()                    { *m = EatRsp{} }
func (m *EatRsp) String() string            { return proto1.CompactTextString(m) }
func (*EatRsp) ProtoMessage()               {}
func (*EatRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *EatRsp) GetEat() *Eat {
	if m != nil {
		return m.Eat
	}
	return nil
}

func (m *EatRsp) GetDisCard() int32 {
	if m != nil {
		return m.DisCard
	}
	return 0
}

type PongReq struct {
	Card  int32            `protobuf:"varint,1,opt,name=card" json:"card,omitempty"`
	Count int32            `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Type  PongReq_GangType `protobuf:"varint,3,opt,name=type,enum=proto.PongReq_GangType" json:"type,omitempty"`
}

func (m *PongReq) Reset()                    { *m = PongReq{} }
func (m *PongReq) String() string            { return proto1.CompactTextString(m) }
func (*PongReq) ProtoMessage()               {}
func (*PongReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *PongReq) GetCard() int32 {
	if m != nil {
		return m.Card
	}
	return 0
}

func (m *PongReq) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *PongReq) GetType() PongReq_GangType {
	if m != nil {
		return m.Type
	}
	return PongReq_MingGang
}

type PongRsp struct {
	Count   int32 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	Card    int32 `protobuf:"varint,2,opt,name=card" json:"card,omitempty"`
	DisCard int32 `protobuf:"varint,3,opt,name=dis_card,json=disCard" json:"dis_card,omitempty"`
}

func (m *PongRsp) Reset()                    { *m = PongRsp{} }
func (m *PongRsp) String() string            { return proto1.CompactTextString(m) }
func (*PongRsp) ProtoMessage()               {}
func (*PongRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *PongRsp) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *PongRsp) GetCard() int32 {
	if m != nil {
		return m.Card
	}
	return 0
}

func (m *PongRsp) GetDisCard() int32 {
	if m != nil {
		return m.DisCard
	}
	return 0
}

type UserJoinTableMsg struct {
	Tid  uint32 `protobuf:"varint,1,opt,name=tid" json:"tid,omitempty"`
	Uid  uint64 `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Pos  int32  `protobuf:"varint,4,opt,name=pos" json:"pos,omitempty"`
}

func (m *UserJoinTableMsg) Reset()                    { *m = UserJoinTableMsg{} }
func (m *UserJoinTableMsg) String() string            { return proto1.CompactTextString(m) }
func (*UserJoinTableMsg) ProtoMessage()               {}
func (*UserJoinTableMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *UserJoinTableMsg) GetTid() uint32 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *UserJoinTableMsg) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UserJoinTableMsg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserJoinTableMsg) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func init() {
	proto1.RegisterType((*LoginReq)(nil), "proto.LoginReq")
	proto1.RegisterType((*LoginRsp)(nil), "proto.LoginRsp")
	proto1.RegisterType((*CreateTableReq)(nil), "proto.CreateTableReq")
	proto1.RegisterType((*CreateTableRsp)(nil), "proto.CreateTableRsp")
	proto1.RegisterType((*JoinTableReq)(nil), "proto.JoinTableReq")
	proto1.RegisterType((*JoinTableRsp)(nil), "proto.JoinTableRsp")
	proto1.RegisterType((*OperatReq)(nil), "proto.OperatReq")
	proto1.RegisterType((*OperatRsp)(nil), "proto.OperatRsp")
	proto1.RegisterType((*DealReq)(nil), "proto.DealReq")
	proto1.RegisterType((*DealRsp)(nil), "proto.DealRsp")
	proto1.RegisterType((*DrawReq)(nil), "proto.DrawReq")
	proto1.RegisterType((*DrawRsp)(nil), "proto.DrawRsp")
	proto1.RegisterType((*HuReq)(nil), "proto.HuReq")
	proto1.RegisterType((*HuRsp)(nil), "proto.HuRsp")
	proto1.RegisterType((*Eat)(nil), "proto.Eat")
	proto1.RegisterType((*EatReq)(nil), "proto.EatReq")
	proto1.RegisterType((*EatRsp)(nil), "proto.EatRsp")
	proto1.RegisterType((*PongReq)(nil), "proto.PongReq")
	proto1.RegisterType((*PongRsp)(nil), "proto.PongRsp")
	proto1.RegisterType((*UserJoinTableMsg)(nil), "proto.UserJoinTableMsg")
	proto1.RegisterEnum("proto.OperatType", OperatType_name, OperatType_value)
	proto1.RegisterEnum("proto.PongReq_GangType", PongReq_GangType_name, PongReq_GangType_value)
}

func init() { proto1.RegisterFile("mahjong.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 753 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xd1, 0x6e, 0xd3, 0x4a,
	0x10, 0xad, 0xed, 0x38, 0x76, 0xa6, 0x4d, 0xe4, 0xbb, 0xba, 0xa2, 0x81, 0x82, 0x54, 0x59, 0x2a,
	0x8a, 0x00, 0x55, 0x28, 0x3c, 0x22, 0x15, 0xb5, 0xa5, 0xa2, 0x20, 0x0a, 0x68, 0x69, 0xdf, 0x90,
	0xa2, 0x6d, 0xbd, 0x75, 0x4c, 0x5b, 0x7b, 0xeb, 0x75, 0x1a, 0xf5, 0x37, 0xf8, 0x11, 0x3e, 0x90,
	0x17, 0x34, 0xb3, 0xeb, 0x24, 0xa6, 0x41, 0x42, 0x7d, 0xca, 0xcc, 0x9c, 0x33, 0x3b, 0x33, 0x67,
	0xc7, 0x1b, 0xe8, 0x5e, 0x89, 0xf1, 0xf7, 0x22, 0x4f, 0xb7, 0x55, 0x59, 0x54, 0x05, 0xf3, 0xe9,
	0x27, 0x3e, 0x84, 0xf0, 0x63, 0x91, 0x66, 0x39, 0x97, 0xd7, 0x2c, 0x02, 0x6f, 0x92, 0x25, 0x7d,
	0x67, 0xd3, 0x19, 0xb4, 0x38, 0x9a, 0xec, 0x01, 0xb4, 0x95, 0xd0, 0x7a, 0x9a, 0xf4, 0xdd, 0x4d,
	0x67, 0xd0, 0xe1, 0xd6, 0x63, 0x0c, 0x5a, 0xb9, 0xb8, 0x92, 0x7d, 0x8f, 0xa2, 0x64, 0xc7, 0x3b,
	0xf5, 0x49, 0x5a, 0xb1, 0x87, 0x10, 0xca, 0xb2, 0x1c, 0x9d, 0x15, 0x89, 0xa4, 0xe3, 0x7c, 0x1e,
	0xc8, 0xb2, 0xdc, 0x2f, 0x12, 0xc9, 0xd6, 0x01, 0xcd, 0xd1, 0x95, 0x4e, 0xeb, 0x33, 0x65, 0x59,
	0x1e, 0xe9, 0x34, 0x8e, 0xa1, 0xb7, 0x5f, 0x4a, 0x51, 0xc9, 0x63, 0x71, 0x7a, 0x29, 0x97, 0xf6,
	0x13, 0x8f, 0x9a, 0x9c, 0xfb, 0x55, 0xc2, 0x9c, 0x0a, 0xf3, 0x47, 0x59, 0x42, 0x13, 0x74, 0x79,
	0x40, 0xfe, 0xfb, 0x24, 0x7e, 0x0d, 0x6b, 0x1f, 0x8a, 0x2c, 0xff, 0x7b, 0x0b, 0x8d, 0x64, 0xb7,
	0x99, 0xbc, 0xb7, 0x98, 0x7c, 0x4f, 0x15, 0x7e, 0x39, 0xd0, 0xf9, 0xac, 0x64, 0x29, 0x2a, 0x2c,
	0xbf, 0x05, 0xad, 0xea, 0x56, 0x99, 0xec, 0xde, 0xf0, 0x3f, 0x73, 0x75, 0xdb, 0x06, 0x3f, 0xbe,
	0x55, 0x92, 0x13, 0xcc, 0x06, 0x10, 0x24, 0x52, 0x5c, 0x72, 0x79, 0x4d, 0xa7, 0xad, 0x0e, 0x7b,
	0x96, 0xf9, 0xd6, 0x44, 0x79, 0x0d, 0x13, 0xb3, 0x14, 0x53, 0x64, 0x7a, 0x4d, 0xa6, 0x89, 0xf2,
	0x1a, 0x66, 0x31, 0xf8, 0xe3, 0x09, 0xf2, 0x5a, 0xc4, 0x5b, 0xb3, 0xbc, 0x43, 0x8c, 0x71, 0x03,
	0xb1, 0x2d, 0x68, 0x4b, 0x6a, 0xb4, 0xef, 0x13, 0xa9, 0x6b, 0x49, 0x07, 0x14, 0xe4, 0x16, 0xc4,
	0xa2, 0xaa, 0xc8, 0x53, 0xe4, 0xb5, 0x1b, 0x45, 0xbf, 0x98, 0x28, 0xaf, 0xe1, 0xf8, 0xa7, 0x3b,
	0x9b, 0xfe, 0x9e, 0x77, 0x5b, 0x2b, 0xe6, 0xfd, 0x9b, 0x62, 0x5a, 0xd9, 0xf9, 0x1a, 0x8a, 0x69,
	0xc5, 0x6b, 0x78, 0xa6, 0x98, 0x56, 0x76, 0xc8, 0x86, 0x62, 0xc4, 0x34, 0x86, 0x55, 0x4c, 0x2b,
	0x3b, 0xe4, 0x82, 0x62, 0x5a, 0x71, 0x03, 0xd5, 0x8a, 0x69, 0xd5, 0x0f, 0xee, 0x28, 0xa6, 0x15,
	0xb7, 0xe0, 0x4c, 0x31, 0xad, 0xfa, 0xe1, 0x5d, 0xc5, 0xb0, 0xa8, 0x85, 0xe3, 0x14, 0x02, 0x7b,
	0xc9, 0x4b, 0x76, 0xf5, 0x7f, 0xf0, 0xcf, 0x44, 0x99, 0xe8, 0xbe, 0xbb, 0xe9, 0x0d, 0x7c, 0x6e,
	0x1c, 0x94, 0xf5, 0x5c, 0xe4, 0x23, 0x74, 0x48, 0x26, 0x9f, 0x07, 0xe7, 0x22, 0xdf, 0x17, 0x25,
	0x2d, 0xf7, 0x78, 0x62, 0xa1, 0x96, 0x81, 0xc6, 0x13, 0x82, 0xe2, 0x8e, 0x2d, 0xa4, 0x55, 0xfc,
	0x04, 0x02, 0xbb, 0x2e, 0xf8, 0x10, 0x10, 0xd9, 0x5c, 0x0f, 0xd9, 0x33, 0x58, 0xab, 0xa5, 0xf0,
	0x06, 0xf8, 0xb4, 0x44, 0x4b, 0xc1, 0x75, 0x02, 0xb5, 0x62, 0x3d, 0x70, 0x8b, 0x0b, 0x82, 0x42,
	0xee, 0x16, 0x17, 0xf1, 0x1b, 0xf0, 0x0e, 0x44, 0xc5, 0x36, 0xa0, 0x33, 0x16, 0x79, 0x32, 0xb2,
	0x89, 0x38, 0x55, 0x88, 0x01, 0xea, 0x7e, 0x03, 0x3a, 0x53, 0x71, 0x23, 0x0d, 0x68, 0x46, 0x0e,
	0x31, 0x40, 0xfd, 0x3f, 0x85, 0xb6, 0x59, 0x4b, 0xf6, 0x18, 0x3c, 0x29, 0x2a, 0xca, 0x5e, 0x1d,
	0xc2, 0xc2, 0x05, 0x60, 0x38, 0xde, 0x35, 0x3c, 0xad, 0xe6, 0x3c, 0x67, 0x09, 0x0f, 0xa5, 0x4a,
	0x32, 0x5d, 0xd7, 0x22, 0xa9, 0x92, 0x4c, 0x53, 0xa9, 0x1f, 0x0e, 0x04, 0x76, 0xb5, 0x97, 0x0d,
	0x49, 0xd7, 0x52, 0x4c, 0xf2, 0xca, 0xe6, 0x19, 0x87, 0x3d, 0x6f, 0x6c, 0xee, 0x7a, 0xf3, 0x13,
	0xd9, 0x7e, 0x27, 0xf2, 0x74, 0xbe, 0xbf, 0xf1, 0x4b, 0x08, 0xeb, 0x08, 0x5b, 0x83, 0xf0, 0x28,
	0xcb, 0x53, 0xf4, 0xa3, 0x15, 0x06, 0xd0, 0xde, 0x9b, 0x90, 0xed, 0xa0, 0xbd, 0x9b, 0x93, 0xed,
	0xc6, 0x9f, 0x6c, 0x4f, 0x5a, 0xcd, 0xeb, 0x3b, 0x8b, 0xf5, 0xeb, 0x4e, 0xdd, 0x85, 0x4e, 0x17,
	0x87, 0xf4, 0x9a, 0x43, 0x7e, 0x83, 0xe8, 0x44, 0xcb, 0x72, 0xf6, 0xe0, 0xe1, 0xc7, 0x17, 0x81,
	0x57, 0xd9, 0x0d, 0xec, 0x72, 0x34, 0xeb, 0x9d, 0x74, 0xe7, 0x3b, 0xb9, 0xe4, 0xaf, 0x03, 0x59,
	0xaa, 0xd0, 0x76, 0xe3, 0xd0, 0x7c, 0x26, 0x01, 0xe6, 0xdf, 0x2c, 0xce, 0x71, 0x92, 0x5f, 0x14,
	0xf9, 0x34, 0x5a, 0x61, 0x3d, 0x00, 0xdc, 0x43, 0x83, 0x46, 0x0e, 0xf9, 0xa5, 0x98, 0x5a, 0xdf,
	0x45, 0x35, 0x0e, 0x27, 0xd6, 0x6b, 0xb1, 0x2e, 0x74, 0x0e, 0x44, 0x65, 0xdd, 0x10, 0xc9, 0x28,
	0x82, 0xf5, 0xa3, 0xe1, 0x0e, 0xf4, 0x8e, 0xcc, 0xbf, 0xe2, 0x57, 0x59, 0xde, 0x64, 0x67, 0x92,
	0xbd, 0x80, 0xb6, 0x41, 0x59, 0xd4, 0x78, 0x3b, 0xb8, 0xbc, 0x7e, 0xf4, 0x47, 0x44, 0xab, 0xd3,
	0x36, 0x05, 0x5e, 0xfd, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x0d, 0x38, 0x9d, 0x07, 0x5c, 0x07, 0x00,
	0x00,
}
