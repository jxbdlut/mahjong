// Code generated by protoc-gen-go.
// source: mahjong.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	mahjong.proto

It has these top-level messages:
	LoginReq
	LoginRsp
	CreateTableReq
	CreateTableRsp
	JoinTableReq
	JoinTableRsp
	DealCardReq
	DealCardRsp
	DrawCardReq
	DrawCardRsp
	HuReq
	HuRsp
	Eat
	EatReq
	EatRsp
	PongReq
	PongRsp
	UserJoinTableMsg
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type LoginReq struct {
	Uid    uint64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Passwd string `protobuf:"bytes,2,opt,name=passwd" json:"passwd,omitempty"`
	Name   string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (m *LoginReq) Reset()                    { *m = LoginReq{} }
func (m *LoginReq) String() string            { return proto1.CompactTextString(m) }
func (*LoginReq) ProtoMessage()               {}
func (*LoginReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LoginReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *LoginReq) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

func (m *LoginReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type LoginRsp struct {
	ErrCode int32  `protobuf:"varint,1,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=err_msg,json=errMsg" json:"err_msg,omitempty"`
}

func (m *LoginRsp) Reset()                    { *m = LoginRsp{} }
func (m *LoginRsp) String() string            { return proto1.CompactTextString(m) }
func (*LoginRsp) ProtoMessage()               {}
func (*LoginRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LoginRsp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *LoginRsp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type CreateTableReq struct {
	Uid uint64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
}

func (m *CreateTableReq) Reset()                    { *m = CreateTableReq{} }
func (m *CreateTableReq) String() string            { return proto1.CompactTextString(m) }
func (*CreateTableReq) ProtoMessage()               {}
func (*CreateTableReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateTableReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type CreateTableRsp struct {
	ErrCode int32  `protobuf:"varint,1,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=err_msg,json=errMsg" json:"err_msg,omitempty"`
	TableId uint32 `protobuf:"varint,3,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
}

func (m *CreateTableRsp) Reset()                    { *m = CreateTableRsp{} }
func (m *CreateTableRsp) String() string            { return proto1.CompactTextString(m) }
func (*CreateTableRsp) ProtoMessage()               {}
func (*CreateTableRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateTableRsp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *CreateTableRsp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *CreateTableRsp) GetTableId() uint32 {
	if m != nil {
		return m.TableId
	}
	return 0
}

type JoinTableReq struct {
	Uid     uint64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	TableId uint32 `protobuf:"varint,2,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
}

func (m *JoinTableReq) Reset()                    { *m = JoinTableReq{} }
func (m *JoinTableReq) String() string            { return proto1.CompactTextString(m) }
func (*JoinTableReq) ProtoMessage()               {}
func (*JoinTableReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *JoinTableReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *JoinTableReq) GetTableId() uint32 {
	if m != nil {
		return m.TableId
	}
	return 0
}

type JoinTableRsp struct {
	ErrCode int32  `protobuf:"varint,1,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=err_msg,json=errMsg" json:"err_msg,omitempty"`
}

func (m *JoinTableRsp) Reset()                    { *m = JoinTableRsp{} }
func (m *JoinTableRsp) String() string            { return proto1.CompactTextString(m) }
func (*JoinTableRsp) ProtoMessage()               {}
func (*JoinTableRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *JoinTableRsp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *JoinTableRsp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type DealCardReq struct {
	Uid     uint64  `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Cards   []int32 `protobuf:"varint,2,rep,packed,name=cards" json:"cards,omitempty"`
	FanCard int32   `protobuf:"varint,3,opt,name=fan_card,json=fanCard" json:"fan_card,omitempty"`
	HunCard int32   `protobuf:"varint,4,opt,name=hun_card,json=hunCard" json:"hun_card,omitempty"`
}

func (m *DealCardReq) Reset()                    { *m = DealCardReq{} }
func (m *DealCardReq) String() string            { return proto1.CompactTextString(m) }
func (*DealCardReq) ProtoMessage()               {}
func (*DealCardReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DealCardReq) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *DealCardReq) GetCards() []int32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *DealCardReq) GetFanCard() int32 {
	if m != nil {
		return m.FanCard
	}
	return 0
}

func (m *DealCardReq) GetHunCard() int32 {
	if m != nil {
		return m.HunCard
	}
	return 0
}

type DealCardRsp struct {
	ErrCode int32  `protobuf:"varint,1,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=err_msg,json=errMsg" json:"err_msg,omitempty"`
}

func (m *DealCardRsp) Reset()                    { *m = DealCardRsp{} }
func (m *DealCardRsp) String() string            { return proto1.CompactTextString(m) }
func (*DealCardRsp) ProtoMessage()               {}
func (*DealCardRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DealCardRsp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *DealCardRsp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type DrawCardReq struct {
	Card uint32 `protobuf:"varint,1,opt,name=card" json:"card,omitempty"`
}

func (m *DrawCardReq) Reset()                    { *m = DrawCardReq{} }
func (m *DrawCardReq) String() string            { return proto1.CompactTextString(m) }
func (*DrawCardReq) ProtoMessage()               {}
func (*DrawCardReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DrawCardReq) GetCard() uint32 {
	if m != nil {
		return m.Card
	}
	return 0
}

type DrawCardRsp struct {
	Card uint32 `protobuf:"varint,1,opt,name=card" json:"card,omitempty"`
}

func (m *DrawCardRsp) Reset()                    { *m = DrawCardRsp{} }
func (m *DrawCardRsp) String() string            { return proto1.CompactTextString(m) }
func (*DrawCardRsp) ProtoMessage()               {}
func (*DrawCardRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DrawCardRsp) GetCard() uint32 {
	if m != nil {
		return m.Card
	}
	return 0
}

type HuReq struct {
	Card uint32 `protobuf:"varint,1,opt,name=card" json:"card,omitempty"`
}

func (m *HuReq) Reset()                    { *m = HuReq{} }
func (m *HuReq) String() string            { return proto1.CompactTextString(m) }
func (*HuReq) ProtoMessage()               {}
func (*HuReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *HuReq) GetCard() uint32 {
	if m != nil {
		return m.Card
	}
	return 0
}

type HuRsp struct {
	Ok bool `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
}

func (m *HuRsp) Reset()                    { *m = HuRsp{} }
func (m *HuRsp) String() string            { return proto1.CompactTextString(m) }
func (*HuRsp) ProtoMessage()               {}
func (*HuRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *HuRsp) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type Eat struct {
	HandCard []int32 `protobuf:"varint,1,rep,packed,name=hand_card,json=handCard" json:"hand_card,omitempty"`
	WaveCard []int32 `protobuf:"varint,2,rep,packed,name=wave_card,json=waveCard" json:"wave_card,omitempty"`
}

func (m *Eat) Reset()                    { *m = Eat{} }
func (m *Eat) String() string            { return proto1.CompactTextString(m) }
func (*Eat) ProtoMessage()               {}
func (*Eat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Eat) GetHandCard() []int32 {
	if m != nil {
		return m.HandCard
	}
	return nil
}

func (m *Eat) GetWaveCard() []int32 {
	if m != nil {
		return m.WaveCard
	}
	return nil
}

type EatReq struct {
	Eat []*Eat `protobuf:"bytes,1,rep,name=eat" json:"eat,omitempty"`
}

func (m *EatReq) Reset()                    { *m = EatReq{} }
func (m *EatReq) String() string            { return proto1.CompactTextString(m) }
func (*EatReq) ProtoMessage()               {}
func (*EatReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *EatReq) GetEat() []*Eat {
	if m != nil {
		return m.Eat
	}
	return nil
}

type EatRsp struct {
	Eat     *Eat  `protobuf:"bytes,1,opt,name=eat" json:"eat,omitempty"`
	DisCard int32 `protobuf:"varint,2,opt,name=dis_card,json=disCard" json:"dis_card,omitempty"`
}

func (m *EatRsp) Reset()                    { *m = EatRsp{} }
func (m *EatRsp) String() string            { return proto1.CompactTextString(m) }
func (*EatRsp) ProtoMessage()               {}
func (*EatRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *EatRsp) GetEat() *Eat {
	if m != nil {
		return m.Eat
	}
	return nil
}

func (m *EatRsp) GetDisCard() int32 {
	if m != nil {
		return m.DisCard
	}
	return 0
}

type PongReq struct {
	Card  int32 `protobuf:"varint,1,opt,name=card" json:"card,omitempty"`
	Count int32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *PongReq) Reset()                    { *m = PongReq{} }
func (m *PongReq) String() string            { return proto1.CompactTextString(m) }
func (*PongReq) ProtoMessage()               {}
func (*PongReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *PongReq) GetCard() int32 {
	if m != nil {
		return m.Card
	}
	return 0
}

func (m *PongReq) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type PongRsp struct {
	Count   int32 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	DisCard int32 `protobuf:"varint,2,opt,name=dis_card,json=disCard" json:"dis_card,omitempty"`
}

func (m *PongRsp) Reset()                    { *m = PongRsp{} }
func (m *PongRsp) String() string            { return proto1.CompactTextString(m) }
func (*PongRsp) ProtoMessage()               {}
func (*PongRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *PongRsp) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *PongRsp) GetDisCard() int32 {
	if m != nil {
		return m.DisCard
	}
	return 0
}

type UserJoinTableMsg struct {
	Tid  uint32 `protobuf:"varint,1,opt,name=tid" json:"tid,omitempty"`
	Uid  uint64 `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Pos  int32  `protobuf:"varint,4,opt,name=pos" json:"pos,omitempty"`
}

func (m *UserJoinTableMsg) Reset()                    { *m = UserJoinTableMsg{} }
func (m *UserJoinTableMsg) String() string            { return proto1.CompactTextString(m) }
func (*UserJoinTableMsg) ProtoMessage()               {}
func (*UserJoinTableMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *UserJoinTableMsg) GetTid() uint32 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *UserJoinTableMsg) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UserJoinTableMsg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserJoinTableMsg) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func init() {
	proto1.RegisterType((*LoginReq)(nil), "proto.LoginReq")
	proto1.RegisterType((*LoginRsp)(nil), "proto.LoginRsp")
	proto1.RegisterType((*CreateTableReq)(nil), "proto.CreateTableReq")
	proto1.RegisterType((*CreateTableRsp)(nil), "proto.CreateTableRsp")
	proto1.RegisterType((*JoinTableReq)(nil), "proto.JoinTableReq")
	proto1.RegisterType((*JoinTableRsp)(nil), "proto.JoinTableRsp")
	proto1.RegisterType((*DealCardReq)(nil), "proto.DealCardReq")
	proto1.RegisterType((*DealCardRsp)(nil), "proto.DealCardRsp")
	proto1.RegisterType((*DrawCardReq)(nil), "proto.DrawCardReq")
	proto1.RegisterType((*DrawCardRsp)(nil), "proto.DrawCardRsp")
	proto1.RegisterType((*HuReq)(nil), "proto.HuReq")
	proto1.RegisterType((*HuRsp)(nil), "proto.HuRsp")
	proto1.RegisterType((*Eat)(nil), "proto.Eat")
	proto1.RegisterType((*EatReq)(nil), "proto.EatReq")
	proto1.RegisterType((*EatRsp)(nil), "proto.EatRsp")
	proto1.RegisterType((*PongReq)(nil), "proto.PongReq")
	proto1.RegisterType((*PongRsp)(nil), "proto.PongRsp")
	proto1.RegisterType((*UserJoinTableMsg)(nil), "proto.UserJoinTableMsg")
}

func init() { proto1.RegisterFile("mahjong.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 463 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x95, 0xed, 0x38, 0x71, 0x26, 0xb4, 0x8a, 0x56, 0x88, 0x06, 0x85, 0x43, 0xd8, 0x03, 0xca,
	0xa9, 0x07, 0x7a, 0x03, 0x09, 0x54, 0xd2, 0x4a, 0x05, 0x81, 0x84, 0x2c, 0xb8, 0x21, 0x59, 0xdb,
	0xee, 0xd6, 0x31, 0x69, 0x76, 0xcd, 0xae, 0x4d, 0x7e, 0x1f, 0xcd, 0xac, 0x4d, 0x62, 0xe4, 0x72,
	0xc8, 0x29, 0x33, 0xfb, 0xde, 0x9b, 0x37, 0x33, 0x19, 0xc3, 0xc9, 0x56, 0xac, 0x7f, 0x1a, 0x9d,
	0x9f, 0x97, 0xd6, 0x54, 0x86, 0xc5, 0xf4, 0xc3, 0x6f, 0x20, 0xf9, 0x6c, 0xf2, 0x42, 0xa7, 0xea,
	0x17, 0x9b, 0x42, 0x54, 0x17, 0x72, 0x16, 0x2c, 0x82, 0xe5, 0x20, 0xc5, 0x90, 0x3d, 0x83, 0x61,
	0x29, 0x9c, 0xdb, 0xc9, 0x59, 0xb8, 0x08, 0x96, 0xe3, 0xb4, 0xc9, 0x18, 0x83, 0x81, 0x16, 0x5b,
	0x35, 0x8b, 0xe8, 0x95, 0x62, 0xfe, 0xae, 0xad, 0xe4, 0x4a, 0xf6, 0x1c, 0x12, 0x65, 0x6d, 0x76,
	0x67, 0xa4, 0xa2, 0x72, 0x71, 0x3a, 0x52, 0xd6, 0xae, 0x8c, 0x54, 0xec, 0x0c, 0x30, 0xcc, 0xb6,
	0x2e, 0x6f, 0x6b, 0x2a, 0x6b, 0xbf, 0xb8, 0x9c, 0x73, 0x38, 0x5d, 0x59, 0x25, 0x2a, 0xf5, 0x4d,
	0xdc, 0x3e, 0xa8, 0xde, 0x7e, 0x78, 0xd6, 0xe5, 0x1c, 0xe7, 0x84, 0x9a, 0x0a, 0xf5, 0x59, 0x21,
	0x69, 0x82, 0x93, 0x74, 0x44, 0xf9, 0x47, 0xc9, 0xdf, 0xc2, 0x93, 0x4f, 0xa6, 0xd0, 0x8f, 0xb7,
	0xd0, 0x11, 0x87, 0x5d, 0xf1, 0x87, 0x43, 0xf1, 0x91, 0x5b, 0xd8, 0xc0, 0xe4, 0x4a, 0x89, 0x87,
	0x95, 0xb0, 0xb2, 0xdf, 0xff, 0x29, 0xc4, 0x77, 0xc2, 0x4a, 0x37, 0x0b, 0x17, 0xd1, 0x32, 0x4e,
	0x7d, 0x82, 0x56, 0xf7, 0x42, 0x67, 0x98, 0xd0, 0x48, 0x71, 0x3a, 0xba, 0x17, 0x1a, 0xab, 0x20,
	0xb4, 0xae, 0x1b, 0x68, 0xe0, 0xa1, 0x75, 0x4d, 0x10, 0xbf, 0x3c, 0x30, 0x3b, 0xb2, 0xdf, 0x97,
	0x30, 0xb9, 0xb2, 0x62, 0xd7, 0xf6, 0xcb, 0x60, 0x40, 0x46, 0x01, 0x6d, 0x86, 0xe2, 0x0e, 0xc5,
	0x95, 0xbd, 0x94, 0x39, 0xc4, 0x37, 0xf5, 0x63, 0xfa, 0x33, 0x02, 0x5d, 0xc9, 0x4e, 0x21, 0x34,
	0x1b, 0x82, 0x92, 0x34, 0x34, 0x1b, 0xfe, 0x1e, 0xa2, 0x6b, 0x51, 0xb1, 0x39, 0x8c, 0xd7, 0x42,
	0xcb, 0xac, 0x11, 0xe2, 0x56, 0x12, 0x7c, 0xa0, 0xe9, 0xe7, 0x30, 0xde, 0x89, 0xdf, 0xca, 0x83,
	0x7e, 0x65, 0x09, 0x3e, 0xd0, 0xfc, 0xaf, 0x60, 0x78, 0x2d, 0x2a, 0xf4, 0x7d, 0x01, 0x91, 0x12,
	0x15, 0xa9, 0x27, 0xaf, 0xc1, 0x7f, 0x22, 0xe7, 0x88, 0xe1, 0x33, 0xbf, 0xf4, 0x3c, 0x57, 0xee,
	0x79, 0x41, 0x0f, 0x0f, 0x17, 0x28, 0x0b, 0xd7, 0x7a, 0xd1, 0x02, 0x65, 0xe1, 0xc8, 0xea, 0x02,
	0x46, 0x5f, 0x8d, 0xce, 0xff, 0x9d, 0x31, 0xf6, 0x33, 0xd2, 0xbf, 0x6a, 0x6a, 0x5d, 0x35, 0x32,
	0x9f, 0xf0, 0x37, 0x8d, 0xc8, 0x95, 0x7b, 0x42, 0x70, 0x40, 0xf8, 0x9f, 0xe1, 0x0f, 0x98, 0x7e,
	0x77, 0xca, 0xfe, 0x3d, 0x48, 0x3c, 0xfc, 0x29, 0x44, 0x55, 0xd1, 0x2e, 0x17, 0xc3, 0xf6, 0xbe,
	0xc2, 0xfd, 0x7d, 0xf5, 0x7c, 0xda, 0xc8, 0x2a, 0x8d, 0x6b, 0xae, 0x07, 0xc3, 0xdb, 0x21, 0x4d,
	0x7e, 0xf1, 0x27, 0x00, 0x00, 0xff, 0xff, 0xb2, 0x64, 0x56, 0x0d, 0x55, 0x04, 0x00, 0x00,
}
